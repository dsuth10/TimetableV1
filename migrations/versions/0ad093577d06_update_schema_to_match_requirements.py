"""Update schema to match requirements

Revision ID: 0ad093577d06
Revises: ac08e6b417a9
Create Date: 2025-06-05 21:16:43.491349

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '0ad093577d06'
down_revision: Union[str, None] = 'ac08e6b417a9'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('classroom',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('capacity', sa.Integer(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('teacher_aide',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('qualifications', sa.Text(), nullable=True),
    sa.Column('colour_hex', sa.String(length=7), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('teacher_aide_name_idx', 'teacher_aide', ['name'], unique=False)
    op.create_table('absence',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('aide_id', sa.Integer(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('reason', sa.String(length=200), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.ForeignKeyConstraint(['aide_id'], ['teacher_aide.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('absence_aide_date_idx', 'absence', ['aide_id', 'date'], unique=False)
    op.create_table('availability',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('aide_id', sa.Integer(), nullable=False),
    sa.Column('weekday', sa.String(length=2), nullable=False),
    sa.Column('start_time', sa.Time(), nullable=False),
    sa.Column('end_time', sa.Time(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.CheckConstraint('end_time <= "16:00"'),
    sa.CheckConstraint('start_time < end_time'),
    sa.CheckConstraint('start_time >= "08:00"'),
    sa.CheckConstraint('weekday IN ("MO", "TU", "WE", "TH", "FR")'),
    sa.ForeignKeyConstraint(['aide_id'], ['teacher_aide.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('aide_id', 'weekday', name='uq_availability_aide_weekday')
    )
    op.create_table('task',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=200), nullable=False),
    sa.Column('category', sa.Enum('PLAYGROUND', 'CLASS_SUPPORT', 'GROUP_SUPPORT', 'INDIVIDUAL_SUPPORT'), nullable=False),
    sa.Column('start_time', sa.Time(), nullable=False),
    sa.Column('end_time', sa.Time(), nullable=False),
    sa.Column('recurrence_rule', sa.String(length=200), nullable=True),
    sa.Column('expires_on', sa.Date(), nullable=True),
    sa.Column('classroom_id', sa.Integer(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('status', sa.Enum('UNASSIGNED', 'ASSIGNED', 'IN_PROGRESS', 'COMPLETE'), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['classroom_id'], ['classroom.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('assignment',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('task_id', sa.Integer(), nullable=False),
    sa.Column('aide_id', sa.Integer(), nullable=True),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('start_time', sa.Time(), nullable=False),
    sa.Column('end_time', sa.Time(), nullable=False),
    sa.Column('status', sa.Enum('UNASSIGNED', 'ASSIGNED', 'IN_PROGRESS', 'COMPLETE'), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['aide_id'], ['teacher_aide.id'], ),
    sa.ForeignKeyConstraint(['task_id'], ['task.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('assignment_aide_date_idx', 'assignment', ['aide_id', 'date'], unique=False)
    op.create_index('assignment_date_idx', 'assignment', ['date'], unique=False)
    op.drop_table('absences')
    op.drop_table('availabilities')
    op.drop_table('assignments')
    op.drop_table('teacher_aides')
    op.drop_table('tasks')
    op.drop_table('classrooms')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('classrooms',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), nullable=False),
    sa.Column('capacity', sa.INTEGER(), nullable=False),
    sa.Column('notes', sa.VARCHAR(length=500), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tasks',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('title', sa.VARCHAR(length=200), nullable=False),
    sa.Column('category', sa.VARCHAR(length=100), nullable=False),
    sa.Column('start_time', sa.TIME(), nullable=False),
    sa.Column('end_time', sa.TIME(), nullable=False),
    sa.Column('recurrence_rule', sa.VARCHAR(length=200), nullable=True),
    sa.Column('expires_on', sa.DATE(), nullable=True),
    sa.Column('classroom_id', sa.INTEGER(), nullable=True),
    sa.Column('notes', sa.VARCHAR(length=500), nullable=True),
    sa.Column('status', sa.VARCHAR(length=9), nullable=True),
    sa.ForeignKeyConstraint(['classroom_id'], ['classrooms.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('teacher_aides',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), nullable=False),
    sa.Column('qualifications', sa.VARCHAR(length=500), nullable=True),
    sa.Column('colour_hex', sa.VARCHAR(length=7), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('assignments',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('task_id', sa.INTEGER(), nullable=False),
    sa.Column('aide_id', sa.INTEGER(), nullable=False),
    sa.Column('date', sa.DATE(), nullable=False),
    sa.Column('start_time', sa.TIME(), nullable=False),
    sa.Column('end_time', sa.TIME(), nullable=False),
    sa.Column('status', sa.VARCHAR(length=9), nullable=True),
    sa.ForeignKeyConstraint(['aide_id'], ['teacher_aides.id'], ),
    sa.ForeignKeyConstraint(['task_id'], ['tasks.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('aide_id', 'date', 'start_time', 'end_time', name='uix_aide_time_slot')
    )
    op.create_table('availabilities',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('aide_id', sa.INTEGER(), nullable=False),
    sa.Column('weekday', sa.INTEGER(), nullable=False),
    sa.Column('start_time', sa.TIME(), nullable=False),
    sa.Column('end_time', sa.TIME(), nullable=False),
    sa.ForeignKeyConstraint(['aide_id'], ['teacher_aides.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('absences',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('aide_id', sa.INTEGER(), nullable=False),
    sa.Column('date', sa.DATE(), nullable=False),
    sa.Column('reason', sa.VARCHAR(length=500), nullable=True),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['aide_id'], ['teacher_aides.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('aide_id', 'date', name='uix_aide_date')
    )
    op.drop_index('assignment_date_idx', table_name='assignment')
    op.drop_index('assignment_aide_date_idx', table_name='assignment')
    op.drop_table('assignment')
    op.drop_table('task')
    op.drop_table('availability')
    op.drop_index('absence_aide_date_idx', table_name='absence')
    op.drop_table('absence')
    op.drop_index('teacher_aide_name_idx', table_name='teacher_aide')
    op.drop_table('teacher_aide')
    op.drop_table('classroom')
    # ### end Alembic commands ###
